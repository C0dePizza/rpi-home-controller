{"name":"Rpi Home Controller","tagline":"An easy to use set of scripts allowing you to access and control the GPIO of your Raspberry Pi","body":"### Overview\r\nThe RPi Home Controller is a simple, yet useful set of scripts allowing the control and interaction with the GPIO of your Pi.\r\n\r\n### Useful links\r\nSuper easy to use 110v 'relay' [here](https://www.adafruit.com/products/268).\r\n\r\nOr if you want to do it yourself, [this](http://www.instructables.com/id/Arduilay/) Instructable is a great way to wire up your home.\r\n\r\n### Features\r\n* Aesthetically appealing web interface\r\n* Synchronization across web clients\r\n* An additional TCP socket server (for easy integration with third party applications)\r\n* Fully customizable display\r\n* And much, much more...\r\n\r\nWorking demo of web interface [here](http://therealtylerdurden.github.io/rpi-home-controller/html/).\r\n\r\n### Install Dependencies\r\n```\r\n# pip install autobahn jinja2\r\n```\r\n\r\n### Usage\r\n```\r\n$ git clone https://github.com/therealtylerdurden/rpi-home-controller.git\r\n$ cd rpi-home-controller\r\n# ./main.py\r\n```\r\n\r\nOr if you want to detach process, run in background, and log output:\r\n```\r\n# nohup ./main.py &\r\n```\r\n\r\n### Configuration\r\nThe configuration is located in `data.json`\r\n\r\nMost of it is relatively self-explanatory, however, configuring groups needs to be explained:\r\n\r\n```javascript\r\n\"Web\": {\r\n    \"Groups\": [\r\n        {\r\n            \"description\": \"AC\",    // \"description\" is the label displayed above the switch\r\n            \"gpiopin\": \"40\"    // \"gpiopin\" is the pin on the Pi that will be toggled\r\n        },\r\n    ]\r\n}\r\n```\r\n\r\n### API\r\nThe API is very easy to use, and the syntax is the same for both the WebSocket server and the TCP server.\r\n\r\n`PIN=<pin number>,OUT,<1,0>` - This sets the pin high or low (1 or 0)\r\n\r\n`PIN=<pin number>,IN,0` - This returns the current state of the pin. The TCP server will return `1` or `0`, but the WebSocket server will return `PIN <pin number> <1,0>`\r\n\r\n`ALLRELAYS=<1,0>` - This command will read data.json and toggle all the pins defined either high or low","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}